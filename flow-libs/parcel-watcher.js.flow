// @flow

// Derived from the README and source of @parcel/watcher located at
// https://github.com/parcel-bundler/watcher and
// https://github.com/parcel-bundler/watcher/blob/411903f55462dd93350edb18088476f775381921/index.js
// Which is licensed MIT

declare module '@parcel/watcher' {
  declare type FilePath = string;
  declare type Options = {|
    ignore?: Array<FilePath>,
    backend?: 'fs-events' | 'watchman' | 'inotify' | 'windows' | 'brute-force'
  |};
  declare type AsyncSubscription = {|unsubscribe: () => Promise<mixed>|};
  declare type Event = {|
    +path: FilePath,
    +type: 'create' | 'update' | 'delete'
  |};

  declare module.exports: {
    getEventsSince(
      dir: FilePath,
      snapshot: FilePath,
      opts: Options
    ): Promise<Array<Event>>,
    subscribe(
      dir: FilePath,
      fn: (err: Error, events: Array<Event>) => mixed,
      opts: Options
    ): Promise<AsyncSubscription>,
    unsubscribe(
      dir: FilePath,
      fn: (err: Error, events: Array<Event>) => mixed,
      opts: Options
    ): Promise<mixed>,
    writeSnapshot(
      dir: FilePath,
      snapshot: FilePath,
      opts: Options
    ): Promise<FilePath>
  };
}
